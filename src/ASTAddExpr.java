/* Generated By:JJTree: Do not edit this line. ASTAddExpr.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTAddExpr extends SimpleNode {
  public ASTAddExpr(int id) {
    super(id);
  }

  public ASTAddExpr(Parser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public SimpleNode interpret(Environment env) {
		env.print();

	  String type1 = ((SimpleNode) jjtGetChild(0)).interpret(env).type;
	  String type2 = ((SimpleNode) jjtGetChild(1)).interpret(env).type;
	  
	  int i, j;
	  double c, d;
	  String value;

	  if (type1.equals("int") && type2.equals("int")) {
		  i = Integer.parseInt(((((SimpleNode) jjtGetChild(0)).interpret(env))).name);
		  j = Integer.parseInt(((((SimpleNode) jjtGetChild(1)).interpret(env))).name);
		  value = Integer.toString(i + j);

	  } else {
		  c = Double.parseDouble(((((SimpleNode) jjtGetChild(0)).interpret(env))).name);
		  d = Double.parseDouble(((((SimpleNode) jjtGetChild(1)).interpret(env))).name);
		  value = Double.toString(c + d);
	  }
	  
	  return new ASTAtom(0, value);
  }
}
/* JavaCC - OriginalChecksum=95fdc968bd25369295c0c8fa7d68df96 (do not edit this line) */
