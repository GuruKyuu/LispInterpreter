/* Generated By:JJTree: Do not edit this line. ASTcons.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTcons extends SimpleNode {
  public ASTcons(int id) {
    super(id);
  }

  public ASTcons(Parser p, int id) {
    super(p, id);
  }


  /** Accept the visitor. **/
  public Object jjtAccept(ParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
  
  public SimpleNode interpret(Environment env) {
	  ASTList clone = new ASTList(0);
	  clone.type = "list";
	  clone.name = "(";
	  int numChild = 0;
	  
	  if (((SimpleNode) jjtGetChild(0)).type.equals("ident")) {
		  for(int i = 0; i < ((SimpleNode) jjtGetChild(0)).interpret(env).jjtGetNumChildren(); i++) {
			  clone.jjtAddChild(((SimpleNode) ((SimpleNode) jjtGetChild(0)).interpret(env).jjtGetChild(i)).interpret(env), numChild);
			  numChild++;
			  clone.name += ((SimpleNode) ((SimpleNode) jjtGetChild(0)).interpret(env).jjtGetChild(i)).interpret(env).name + " ";
		  }
	  }
	  else {
		  /*Here I changed it so that cons checks to see if there's a car or cdr in its first argument and handles it appropriately*/
		  for(int i = 0; i < jjtGetChild(0).jjtGetNumChildren(); i++) {
			  clone.jjtAddChild(((SimpleNode) jjtGetChild(0).jjtGetChild(i)).interpret(env), numChild);
			  numChild++;
			  if(((SimpleNode) jjtGetChild(0).jjtGetChild(0)).name.equals("cdr"))
				  clone.name += ((SimpleNode) ((SimpleNode) jjtGetChild(0)).interpret(env).jjtGetChild(i)).interpret(env).name + " ";
			  else if (((SimpleNode) jjtGetChild(0).jjtGetChild(0)).name.equals("car")) {
				  clone.name += ((SimpleNode) jjtGetChild(0).jjtGetChild(1)).interpret(env).name + " "; break;
			  }
			  else
				  clone.name += ((SimpleNode) jjtGetChild(0).jjtGetChild(i)).interpret(env).name + " ";
			  
		  }
	  }
	  
	  if (((SimpleNode) jjtGetChild(1)).type.equals("ident")) {
		  for(int i = 0; i < ((SimpleNode) jjtGetChild(1)).interpret(env).jjtGetNumChildren(); i++) {
			  clone.jjtAddChild(((SimpleNode) ((SimpleNode) jjtGetChild(1)).interpret(env).jjtGetChild(i)).interpret(env), numChild);
			  numChild++;
			  clone.name += ((SimpleNode) ((SimpleNode) jjtGetChild(1)).interpret(env).jjtGetChild(i)).interpret(env).name + " ";
		  }
		  clone.name += ")";
	  }
	  else {
		  /*Here I made the same change as in the previous if statement*/
		  for(int i = 0; i < jjtGetChild(1).jjtGetNumChildren(); i++) {
			  clone.jjtAddChild(((SimpleNode) jjtGetChild(1).jjtGetChild(i)).interpret(env), numChild);
			  numChild++;
			  if(((SimpleNode) jjtGetChild(1).jjtGetChild(0)).name.equals("cdr"))
				  clone.name += ((SimpleNode) ((SimpleNode) jjtGetChild(1)).interpret(env).jjtGetChild(i)).interpret(env).name + " ";
			  else if (((SimpleNode) jjtGetChild(1).jjtGetChild(0)).name.equals("car")) {
				  clone.name += ((SimpleNode) jjtGetChild(1).jjtGetChild(1)).interpret(env).name + " "; break;
			  }
			  else
				  clone.name += ((SimpleNode) jjtGetChild(1).jjtGetChild(i)).interpret(env).name + " ";
		  }
		  clone.name += ")";
	  }
	  
	  return clone;
  }
}
/* JavaCC - OriginalChecksum=4e0663a724ca4bc2f34d4fab87c8ca06 (do not edit this line) */
